@page "/fetchdata"


<PageTitle>Weather forecast</PageTitle>

@using BlazorTables.Data
@using BlazorTables.Services
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>
<button class="btn btn-primary" @onclick="CreateClicked">Create Dummy Record</button>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Inject] ITableService<WeatherForecast> tableService { get; set; }
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    async Task CreateClicked()
    {
        var weather = new WeatherForecast
            {
                Date = DateTime.UtcNow.Date,
                Summary = "This is a test",
                TemperatureC = 1000,

            };
        await tableService.SaveAsync(weather);
        forecasts = (await tableService.GetAllAsync()).ToArray();
    }
}
